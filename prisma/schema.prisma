generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  userType      userType  @default(ADMIN)
  Account       Account[]
  Session       Session[]
  posts         posts[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model posts {
  id          String   @id @default(cuid())
  title       String
  content     Json?
  published   Boolean  @default(false)
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())
  authorId    String
  description String?
  slug        String   @unique @default(cuid())
  image       String   @default("https://picsum.photos/seed/hr/1800/600")
  user        User     @relation(fields: [authorId], references: [id])
}

enum userType {
  OWNER
  ADMIN
  USER
}
